imports:
  - { resource: Component/FalHandling/Services.yaml }
  - { resource: Component/PostPublishTaskExecution/Services.yaml }
  #- { resource: Component/RecordHandling/Services.yaml }
  - { resource: Component/TcaHandling/Services.yaml }
  - { resource: Features/AdminTools/Services.yaml }
  - { resource: Features/CacheInvalidation/Services.yaml }
  - { resource: Features/CompareDatabaseTool/Services.yaml }
  - { resource: Features/ContextMenuPublishEntry/Services.yaml }
  - { resource: Features/FileEdgeCacheInvalidator/Services.yaml }
  - { resource: Features/NewsSupport/Services.yaml }
  - { resource: Features/PublishSorting/Services.yaml }
  - { resource: Features/RedirectsSupport/Services.yaml }
  - { resource: Features/RefIndexUpdate/Services.yaml }
  - { resource: Features/SysLogPublisher/Services.yaml }
  - { resource: Features/SystemInformationExport/Services.yaml }
  - { resource: Features/WarningOnForeign/Services.yaml }

services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: false
    bind:
      $localDatabase: '@In2code.In2publishCore.Database.Local'
      $foreignDatabase: '@In2code.In2publishCore.Database.Foreign'
      $cache: '@cache.in2publish_core'
      array $extConf: '@=service("TYPO3\\CMS\\Core\\Configuration\\ExtensionConfiguration").get("in2publish_core")'

  In2code\In2publishCore\:
    resource: '../Classes/*'
    exclude:
      - '../Classes/Command/Local/*'
      - '../Classes/Command/Foreign/*'
      - '../Classes/Domain/Model/*'
      - '../Classes/Component/*'
      - '../Classes/Features/*'

  TYPO3\CMS\Backend\Middleware\BackendRouteInitialization:
    alias: In2code\In2publishCore\Middleware\BackendRouteInitialization
    public: true

  # Services

  In2code.In2publishCore.Database.Local:
    class: 'TYPO3\CMS\Core\Database\Connection'
    factory: [ '@In2code\In2publishCore\Factory\ConnectionFactory', 'createLocalConnection' ]

  In2code.In2publishCore.Database.Foreign:
    class: 'TYPO3\CMS\Core\Database\Connection'
    factory: [ '@In2code\In2publishCore\Factory\ConnectionFactory', 'createForeignConnection' ]

  In2code\In2publishCore\Service\Environment\ForeignEnvironmentService:
    public: true

  In2code\In2publishCore\Service\Permission\PermissionService:
    public: true

  cache.in2publish_core:
    class: TYPO3\CMS\Core\Cache\Frontend\FrontendInterface
    factory: [ '@TYPO3\CMS\Core\Cache\CacheManager', 'getCache' ]
    arguments: [ 'in2publish_core' ]

  # Commands

  In2code\In2publishCore\Command\Tools\TestCommand:
    tags:
      - name: 'console.command'
        command: 'in2publish_core:tools:test'
        description: >
          Executes the in2publish_core backend tests.
          Enable verbose mode if you want to see a success message.
          For scripted testing check the exit code of this command.

  # EventListener

  In2code\In2publishCore\Config\Provider\PageTsProvider:
    tags:
      - name: event.listener
        identifier: 'in2publishcore-PageTsProvider-bootCompleted'
        method: 'processData'
        event: In2code\In2publishCore\Event\ExtTablesPostProcessingEvent

  In2code\In2publishCore\Domain\Service\Publishing\RunningRequestService:
    tags:
      - name: event.listener
        identifier: 'in2publishcore-RunningRequestService-RecursiveRecordPublishingBegan'
        method: 'onRecursiveRecordPublishingBegan'
        event: In2code\In2publishCore\Event\RecursiveRecordPublishingBegan
      - name: event.listener
        identifier: 'in2publishcore-RunningRequestService-RecordsWereSelectedForPublishing'
        method: 'onRecordsWereSelectedForPublishing'
        event: In2code\In2publishCore\Event\RecordsWereSelectedForPublishing
      - name: event.listener
        identifier: 'in2publishcore-RunningRequestService-VoteIfRecordIsPublishable'
        method: 'isPublishable'
        event: In2code\In2publishCore\Event\VoteIfRecordIsPublishable
      - name: event.listener
        identifier: 'in2publishcore-RunningRequestService-DetermineIfRecordIsPublishing'
        method: 'isPublishing'
        event: In2code\In2publishCore\Event\DetermineIfRecordIsPublishing
